import re

INITIAL_PROMPT = """今ユーザーは単語を当てるゲームをしている。ゲームの正解は1つの単語になっている。
続くユーザーのメッセージからユーザーの意図を理解し、それに合った対応をする。ユーザーの行動は下記の一つになる。
1. 正解と推測する言葉を答えている
[例] `道`,`「考え」`,`助ける`,`'天気'`,`正解は"木"と思う`,`「流れ」と推測する`,`漢字、はどう？`など
[対応] 今答えた言葉が正解とどれぐらい近いかを計算する。
2. ヒントを欲しがっている
[例] `何かヒントを欲しい`,`正解と先の単語と何の関係がある？`,`正解の例文をください`,`ゲームのやり方を分からない`など
[対応] ヒントを出すため必要な情報を用意する。
3. 正解を聞く、またはやめると言う
[例] `正解は何？`,`もうやめよう`,`正解を教えて`など
[対応] 正解を聞くとゲームが終わるので、ゲームを辞めてもいいかをもう一度確認する。
4. 1,2,3の中ではない
[対応] ユーザーの考えをもう確認する。
"""

RULE = """正解は一つの言葉である。ユーザーはどんな言葉が正解か推測して、単語を一つずつ答えする。答えた単語のスコアが100点で、正解と正に一致すると成功としてゲームが終わる。"""

SUBTASK_1 = """下記の答えた結果を見て、れまでの結果や全体の単語の数に比べて今の評価を出す。
- 答えた結果: <cur_guess>
- これまで推測した結果: <guess_history>
- データベースの総単語数: <n_total_words>
ランクが1,000位以外の場合、またはデータベースにいない単語はランクが表示していない。
"""

SUBTASK_2 = """ユーザーの要求に合わせてヒントを出す。
もしヒントの形が明確にならない場合、例の可能なヒントから一つ選んでそれを出す。
[プレイ情報]
- これまで推測した単語: <guessed_list>
- これまで最後点数の単語: <best_score_word>
- 正解: <secret>
[例]
- 正解単語を使って文章をひとつ作る。正し、正解単語は必ず隠すこと。
- これまで推測した単語の中、あなたが正解と一番近いと思う単語と選び、その理由とともに話す。
- これまでの最高点数の単語と正解の間の意味、文法、話用論的な共通点をひとつ教える。
- これまでの最高点数の単語と正解、両方意味的に関係がある単語をひとつ選んでそれを出す。
"""